//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var GenresTitles = newGenresTitlesTable("public", "genres_titles", "")

type genresTitlesTable struct {
	postgres.Table

	// Columns
	GenreID postgres.ColumnInteger
	TitleID postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type GenresTitlesTable struct {
	genresTitlesTable

	EXCLUDED genresTitlesTable
}

// AS creates new GenresTitlesTable with assigned alias
func (a GenresTitlesTable) AS(alias string) *GenresTitlesTable {
	return newGenresTitlesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GenresTitlesTable with assigned schema name
func (a GenresTitlesTable) FromSchema(schemaName string) *GenresTitlesTable {
	return newGenresTitlesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GenresTitlesTable with assigned table prefix
func (a GenresTitlesTable) WithPrefix(prefix string) *GenresTitlesTable {
	return newGenresTitlesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GenresTitlesTable with assigned table suffix
func (a GenresTitlesTable) WithSuffix(suffix string) *GenresTitlesTable {
	return newGenresTitlesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGenresTitlesTable(schemaName, tableName, alias string) *GenresTitlesTable {
	return &GenresTitlesTable{
		genresTitlesTable: newGenresTitlesTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newGenresTitlesTableImpl("", "excluded", ""),
	}
}

func newGenresTitlesTableImpl(schemaName, tableName, alias string) genresTitlesTable {
	var (
		GenreIDColumn  = postgres.IntegerColumn("genre_id")
		TitleIDColumn  = postgres.IntegerColumn("title_id")
		allColumns     = postgres.ColumnList{GenreIDColumn, TitleIDColumn}
		mutableColumns = postgres.ColumnList{}
	)

	return genresTitlesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		GenreID: GenreIDColumn,
		TitleID: TitleIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
